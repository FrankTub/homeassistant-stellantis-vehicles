name: Pre-Release

on:
  pull_request:
    branches: [ develop ]
    types: [closed]
  workflow_dispatch:

jobs:
  deploy:
    if: github.event.pull_request.merged || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all commits and tags

      - name: Get last pre-release tag or create new one
        id: last-pre-release-tag
        run: |
          # Fetch all tags
          git fetch --tags
          
          # Fetch last release
          last_release_tag=$(git tag -l '[0-9]*.[0-9]*.[0-9]*' --sort=-v:refname | head -n 1)
          
          # Fetch last pre-release
          last_pre_release_tag=$(git tag -l '[0-9]*.[0-9]*.[0-9]*-beta.*' --sort=-v:refname | head -n 1)
          
          if [ -z "$last_pre_release_tag" ]; then
            # If no pre-release tags found, get the last release tag
            IFS='.' read -r release_major release_minor release_patch <<< "$last_release_tag"
            incremented_release_patch_number=$((release_patch + 1))
            new_pre_release_tag="$release_major.$release_minor.$incremented_release_patch_number-beta.1"
            echo "No pre-release tags found. Creating a new one: $new_pre_release_tag"
          else
            echo "Last pre-release tag: $last_pre_release_tag"
            IFS='.' read -r prerelease_major prerelease_minor prerelease_patch prerelease_beta_number <<< "$last_pre_release_tag"
            incremented_beta_number=$((prerelease_beta_number + 1))
            new_pre_release_tag="$major.$minor.$patch.$incremented_beta_number"
          fi
          
          echo "::set-output name=new_pre_release_tag::$new_pre_release_tag"

      - name: Set environment variable
        run: echo "NEW_PRE_RELEASE_TAG=${{ steps.last-pre-release-tag.outputs.new_pre_release_tag }}" >> $GITHUB_ENV

      - name: Display new pre-release tag
        run: echo "New pre-release tag is $NEW_PRE_RELEASE_TAG"

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          tag_name: ${{ steps.last-pre-release-tag.outputs.new_pre_release_tag }}
          release_name: ${{ steps.last-pre-release-tag.outputs.new_pre_release_tag }}
          prerelease: true
